name: Deploy to Elastic Beanstalk using ECR

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:  # 수동 실행 허용

jobs:
  deploy:
    runs-on: ubuntu-latest  # GitHub Actions에서 사용할 최신 Ubuntu 환경

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3  # 소스 코드를 GitHub Actions에 체크아웃

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1  # ECR 로그인

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}  # ECR 레지스트리 URL
        ECR_REPOSITORY: devdocker  # ECR 레포지토리 이름
        IMAGE_TAG: ${{ github.sha }}  # GitHub SHA 값으로 태그 설정
      run: |
        docker buildx build --platform=linux/amd64 -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: Generate Dockerrun.aws.json
      run: |
        echo '{
          "AWSEBDockerrunVersion": 1,
          "Image": {
            "Name": "${{ steps.build-image.outputs.image }}",
            "Update": "true"
          },
          "Ports": [
            {
              "ContainerPort": "8080"
            }
          ]
        }' > Dockerrun.aws.json

    - name: Get current time
      uses: 1466587594/get-current-time@v2
      id: current-time
      with:
        format: YYYYMMDD_HH-mm-ss
        utcOffset: "+09:00"  # 한국 시간대 (UTC+09:00)

    - name: Generate deployment package
      run: |
        mkdir -p deploy/.platform/nginx/conf.d
        cp Dockerrun.aws.json deploy/Dockerrun.aws.json
        cp .platform/nginx/conf.d/proxy.conf deploy/.platform/nginx/conf.d/proxy.conf
        cd deploy && zip -r deploy.zip .

    - name: Beanstalk Deploy
      uses: einaregilsson/beanstalk-deploy@v14
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: [Elastic Beanstalk app 이름]  # Elastic Beanstalk 애플리케이션 이름 입력
        environment_name: [Elastic Beanstalk Env 이름]  # Elastic Beanstalk 환경 이름 입력
        version_label: docker-deploy-${{steps.current-time.outputs.formattedTime}}
        region: ap-northeast-2  # 한국 리전
        deployment_package: deploy/deploy.zip
